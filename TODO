Compiler

cc68 rules for cleaning up booluge/boollt etc
Stamp out compiler JMP for JBRA and make sure it works on as68

See if can remove other changes for typecast now fixed the typecast code
(done assign)

X and fp tracking

Libraries

Fill in the many missing blanks for pure 6800 library code

32bit maths needs debug

tosmuleax
tosudiveax		(and signed versions)
tosumodeax
tosdiveax
tosmodeax

Optimize the lib680* shifters to spot by 8,16,24 and do moves.

Teach cc basic options people use even as no-ops (-O -g -s)
[-O can turn on register support or something for now. Proper optimizer
 will make it more relevant, -Os needs to go to compiler in the end]
What to do about cc standard output format ? Use -C 0x100 absolute ?

Can we fix --add-source cc65 option and fix/clean up the others
Take out cc65 machine type support

For Fuzix hook the stack checker into a wrapper for brk/sbrk so it does
real checks. Can we use this for space expansion hooks ?

Fuzix binary format option including tacking on debug data

General count the 1 bits multiply helper
(and maybe general  tool to generate lib code for them)


Library

atexit
atol
memmove

Probably should stay in C
strcasecmp
strncasecmp
strcasestr
strcoll
strcspn
strsep
strpbrk
strsep
strspn
strtok
strtol
strtoul
strxfrm
rand

Extras that are useful
_ltoa
_itoa
strlcpy
strlcat


Optional BSDisms/alias

bcmp
bcopy
bsearch
bzero
index
rindex
swab

Null defines
htons
ntohs
htonl
ntohl

+
