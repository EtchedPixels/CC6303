- cc a non existing C file gives bogus error - need to check cc68 return
  codes and stuff
- overlong names clashing in assembler


Optimizing Rules
----------------

Why is it not fixing up function entry ldd pshb psha pshx ?

Lots of cases where we generate extra TSX calls - check our InvalidateX
are not overdone somewhere silly

Libc test compiling
-------------------

None at code generation

Kernel test compiling
---------------------

(error handling ?)
2:Processing syscall_fs.c 4
[/opt/cc68/lib/cc68 -I /rotating/home/alan/UZI/External/FUZIX/Kernel/cpu-6303 -I /rotating/home/alan/UZI/External/FUZIX/Kernel/platform-rc2014-6303 -I /rotating/home/alan/UZI/External/FUZIX/Kernel/include -r --add-source syscall_fs.c ]
syscall_fs.c(405): Error: Undefined symbol: 'ssize_t'
syscall_fs.c(405): Error: Illegal function call
syscall_fs.c(405): Error: Variable identifier expected
syscall_fs.c(405): Error: ')' expected
syscall_fs.c(405): Error: ';' expected
syscall_fs.c(405): Error: Expression expected
syscall_fs.c(405): Warning: Statement has no effect
syscall_fs.c(405): Error: ';' expected
syscall_fs.c(422): Internal compiler error:
g_leave: stack unbalanced by 2

Linker
------

Sometimes a ZP asm reference to a non existing variable ends up as U 0 in
the map and we didn't error
What is causing @zero to end up 4 bytes into ZP not at start of ZP ?

FIXED:

Mishandling of  < const for char/int.

asctime.c
ltostr.c
__getgrent.c
__getpwent.c
initgroups.c
putenv.c
qsort.c
readdir.c
strsignal.c
vfscanf.c


Mishandling of push of const long

atol.c
strtol.c
sysconf.c

Fixed mishandling of char as argument to function

readline.c
regexp.c (other bugs still)
tzset.c
vfprintf.c

Fixed ?: with mix of void * and char *

gets.c

Pedantic But Correct (Fixed Library Code)

Should cast const char * to char * on returns

strchr
strrchr

Fixed (for now) by correcting register param disable

curses/refresh.c
regexp.c (but other bug)

Fixed (incorrect Bcc out of range)

regexp.s
